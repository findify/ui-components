webpackHotUpdate(0,{

/***/ "./node_modules/css-loader/index.js?{\"modules\":true,\"importLoaders\":1,\"camelCase\":true,\"localIdentName\":\"[path]-[name]-[local]\"}!./node_modules/postcss-loader/index.js!./node_modules/typed-css-modules-loader/index.js?{\"camelCase\":true}!./src/widgets/Autocomplete/styles.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")();
// imports


// module
exports.push([module.i, ".src-widgets-Autocomplete--styles-root {\n  display: inline-block;\n  vertical-align: top;\n  position: relative;\n  box-shadow: 0 0 8px 0 rgba(0,0,0,.5);\n  margin: 15px 10px 10px;\n}\n\n.src-widgets-Autocomplete--styles-root:before {\n  content: ' ';\n  position: absolute;\n  width: 16px;\n  height: 16px;\n  background-color: #f7f7f7;\n  box-shadow: 2px -2px 2px 0 rgba(0,0,0,.25);\n  -webkit-transform: rotate(-45deg);\n          transform: rotate(-45deg);\n  top: -8px;\n}\n\n.src-widgets-Autocomplete--styles-container {\n  display: table;\n  width: 100%;\n}\n\n.src-widgets-Autocomplete--styles-tip {\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  cursor: pointer;\n  text-align: center;\n  padding: 10px;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 700;\n  color: #b2b2b2;\n}\n\n.src-widgets-Autocomplete--styles-tip-query{\n  color: #404040;\n}\n\n.src-widgets-Autocomplete--styles-matches {\n  width: 400px;\n}\n\n.src-widgets-Autocomplete--styles-search-suggestions {\n  width: 190px;\n  background-color: #f7f7f7;\n}\n\n.src-widgets-Autocomplete--styles-search-suggestions, .src-widgets-Autocomplete--styles-matches {\n  display: table-cell;\n  vertical-align: top;\n  padding: 0 15px;\n}\n\n.src-widgets-Autocomplete--styles-direction.src-widgets-Autocomplete--styles-ltr:before {\n  left: 20px;\n}\n\n.src-widgets-Autocomplete--styles-direction.src-widgets-Autocomplete--styles-rtl:before {\n  right: 150px;\n}\n", ""]);

// exports
exports.locals = {
	"root": "src-widgets-Autocomplete--styles-root",
	"root": "src-widgets-Autocomplete--styles-root",
	"container": "src-widgets-Autocomplete--styles-container",
	"container": "src-widgets-Autocomplete--styles-container",
	"tip": "src-widgets-Autocomplete--styles-tip",
	"tip": "src-widgets-Autocomplete--styles-tip",
	"tip-query": "src-widgets-Autocomplete--styles-tip-query",
	"tipQuery": "src-widgets-Autocomplete--styles-tip-query",
	"matches": "src-widgets-Autocomplete--styles-matches",
	"matches": "src-widgets-Autocomplete--styles-matches",
	"search-suggestions": "src-widgets-Autocomplete--styles-search-suggestions",
	"searchSuggestions": "src-widgets-Autocomplete--styles-search-suggestions",
	"direction": "src-widgets-Autocomplete--styles-direction",
	"direction": "src-widgets-Autocomplete--styles-direction",
	"ltr": "src-widgets-Autocomplete--styles-ltr",
	"ltr": "src-widgets-Autocomplete--styles-ltr",
	"rtl": "src-widgets-Autocomplete--styles-rtl",
	"rtl": "src-widgets-Autocomplete--styles-rtl"
};

/***/ }),

/***/ "./src/index.ts":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__("./src/styles.global.css");
var Autocomplete_1 = __webpack_require__("./src/widgets/Autocomplete/index.tsx");
exports.AutocompleteWidget = Autocomplete_1.AutocompleteWidget;
var AutocompleteMobile_1 = __webpack_require__("./src/widgets/AutocompleteMobile/index.tsx");
exports.AutocompleteMobileWidget = AutocompleteMobile_1.AutocompleteMobileWidget;
var Rating_1 = __webpack_require__("./src/widgets/Rating/index.tsx");
exports.RatingWidget = Rating_1.RatingWidget;


 ;(function register() { /* react-hot-loader/webpack */ if (true) { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } if (typeof module.exports === 'function') { __REACT_HOT_LOADER__.register(module.exports, 'module.exports', "/Users/bitaru/projects/findify-ui-components/src/index.ts"); return; } for (var key in module.exports) { if (!Object.prototype.hasOwnProperty.call(module.exports, key)) { continue; } var namedExport = void 0; try { namedExport = module.exports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, "/Users/bitaru/projects/findify-ui-components/src/index.ts"); } } })();

/***/ }),

/***/ "./src/render.tsx":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const React = __webpack_require__(0);
const ReactDOM = __webpack_require__(2);
const react_hot_loader_1 = __webpack_require__("./node_modules/react-hot-loader/index.js");
const Widgets = __webpack_require__("./src/index.ts");
const root = document.createElement('div');
document.body.appendChild(root);
const render = () => {
    ReactDOM.render(React.createElement(react_hot_loader_1.AppContainer, null,
        React.createElement("div", null, Object.keys(Widgets).map((key) => React.createElement(Widgets[key], { key })))), root);
};
render();
if (true) {
    module.hot.accept("./src/index.ts", render);
}


 ;(function register() { /* react-hot-loader/webpack */ if (true) { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } if (typeof module.exports === 'function') { __REACT_HOT_LOADER__.register(module.exports, 'module.exports', "/Users/bitaru/projects/findify-ui-components/src/render.tsx"); return; } for (var key in module.exports) { if (!Object.prototype.hasOwnProperty.call(module.exports, key)) { continue; } var namedExport = void 0; try { namedExport = module.exports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, "/Users/bitaru/projects/findify-ui-components/src/render.tsx"); } } })();

/***/ }),

/***/ "./src/widgets/Autocomplete/index.tsx":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const React = __webpack_require__(0);
const classnames_1 = __webpack_require__(5);
const Rating_1 = __webpack_require__("./src/widgets/Rating/index.tsx");
const styles = __webpack_require__("./src/widgets/Autocomplete/styles.css");
function AutocompleteWidget({ direction = 'ltr', searchSuggestions, productMatches, onSearchSuggestionClick, onTipClick, suggestionsTitle, productMatchesTitle, tipTitle, query, }) {
    const searchSuggestionsNode = (React.createElement("div", { className: "findify-autocomplete-widget__search-suggestions" },
        React.createElement("div", { className: "findify-search-suggestions" },
            suggestionsTitle && (React.createElement("div", { className: "findify-search-suggestions__title" },
                React.createElement("span", { className: "findify-autocomplete-title" }, suggestionsTitle))),
            React.createElement("div", { className: "findify-search-suggestions__list" }, searchSuggestions.map((suggestion, i) => (React.createElement("span", { key: i, className: "findify-search-suggestions__item", onClick: () => onSearchSuggestionClick(suggestion), dangerouslySetInnerHTML: {
                    __html: highlightSuggestion(suggestion, query),
                } })))))));
    const productMatchesNode = productMatches && productMatches.length && (React.createElement("div", { className: "findify-autocomplete-widget__product-matches" },
        React.createElement("div", { className: "findify-product-matches" },
            productMatchesTitle && (React.createElement("div", { className: "findify-product-matches__title" },
                React.createElement("span", { className: "findify-autocomplete-title" }, productMatchesTitle))),
            React.createElement("div", { className: "findify-product-matches__items" }, productMatches.map((p, i) => (React.createElement("a", { className: "findify-product-matches__item", href: p.link, key: i },
                React.createElement("div", { className: "findify-product-matches__item-image" },
                    React.createElement("img", { className: "findify-product-matches__item-src", src: p.imageLink })),
                React.createElement("span", { className: "findify-product-matches__item-title" }, p.title),
                p.rating && (React.createElement("div", { className: "findify-product-matches__item-rating" },
                    React.createElement(Rating_1.RatingWidget, { value: p.rating, reviewsCount: p.reviewsCount }))),
                React.createElement("div", { className: "findify-product-matches__item-price" },
                    p.discountPrice && (React.createElement("span", { className: "findify-product-matches__item-price-discount" }, p.discountPrice)),
                    React.createElement("span", { className: "findify-product-matches__item-price-regular" }, p.price)))))))));
    return (React.createElement("div", { className: classnames_1.default(styles.root, styles.direction[direction]) },
        direction === 'rtl'
            &&
                React.createElement("div", { className: styles.container },
                    productMatchesNode,
                    searchSuggestionsNode)
            ||
                React.createElement("div", { className: styles.container },
                    searchSuggestionsNode,
                    productMatchesNode),
        tipTitle &&
            React.createElement("div", { className: styles.tip, onClick: () => onTipClick && onTipClick() },
                tipTitle,
                React.createElement("span", { className: styles.tipQuery },
                    "\u00A0\"",
                    query,
                    "\""))));
}
exports.AutocompleteWidget = AutocompleteWidget;
function highlightSuggestion(value, highlighted) {
    const regexp = new RegExp(`(${highlighted})`);
    return value.replace(regexp, '<span class="findify-search-suggestions__highlighted-text">$1</span>');
}


 ;(function register() { /* react-hot-loader/webpack */ if (true) { if (typeof __REACT_HOT_LOADER__ === 'undefined') { return; } if (typeof module.exports === 'function') { __REACT_HOT_LOADER__.register(module.exports, 'module.exports', "/Users/bitaru/projects/findify-ui-components/src/widgets/Autocomplete/index.tsx"); return; } for (var key in module.exports) { if (!Object.prototype.hasOwnProperty.call(module.exports, key)) { continue; } var namedExport = void 0; try { namedExport = module.exports[key]; } catch (err) { continue; } __REACT_HOT_LOADER__.register(namedExport, key, "/Users/bitaru/projects/findify-ui-components/src/widgets/Autocomplete/index.tsx"); } } })();

/***/ }),

/***/ "./src/widgets/Autocomplete/styles.css":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"modules\":true,\"importLoaders\":1,\"camelCase\":true,\"localIdentName\":\"[path]-[name]-[local]\"}!./node_modules/postcss-loader/index.js!./node_modules/typed-css-modules-loader/index.js?{\"camelCase\":true}!./src/widgets/Autocomplete/styles.css");
if(typeof content === 'string') content = [[module.i, content, '']];
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/addStyles.js")(content, {});
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"modules\":true,\"importLoaders\":1,\"camelCase\":true,\"localIdentName\":\"[path]-[name]-[local]\"}!./node_modules/postcss-loader/index.js!./node_modules/typed-css-modules-loader/index.js?{\"camelCase\":true}!./src/widgets/Autocomplete/styles.css", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"modules\":true,\"importLoaders\":1,\"camelCase\":true,\"localIdentName\":\"[path]-[name]-[local]\"}!./node_modules/postcss-loader/index.js!./node_modules/typed-css-modules-loader/index.js?{\"camelCase\":true}!./src/widgets/Autocomplete/styles.css");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ 5:
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(1))(79);

/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,